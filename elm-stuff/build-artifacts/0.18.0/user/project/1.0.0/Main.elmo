var _user$project$Main$init = {ctor: '_Tuple2', _0: 0, _1: _elm_lang$core$Platform_Cmd$none};
var _user$project$Main$update = F2(
	function (msg, model) {
		var _p0 = msg;
		return {ctor: '_Tuple2', _0: _p0._0, _1: _elm_lang$core$Platform_Cmd$none};
	});
var _user$project$Main$intToPadStr = function ($int) {
	return A3(
		_elm_lang$core$String$padLeft,
		2,
		_elm_lang$core$Native_Utils.chr('0'),
		_elm_lang$core$Basics$toString($int));
};
var _user$project$Main$secsToHundredths = function (secs) {
	return _elm_lang$core$Basics$floor((secs / 60) * 100);
};
var _user$project$Main$view = function (model) {
	var date = _elm_lang$core$Date$fromTime(model);
	var hours = _elm_lang$core$Date$hour(date);
	var mins = _elm_lang$core$Date$minute(date);
	var secs = _elm_lang$core$Date$second(date);
	var millisecs = _elm_lang$core$Date$millisecond(date);
	var preciseSecs = _elm_lang$core$Basics$toFloat(secs) + (_elm_lang$core$Basics$toFloat(millisecs) / 1000);
	var hundredthsOfMins = _user$project$Main$secsToHundredths(preciseSecs);
	var timeText = A2(
		_elm_lang$core$Basics_ops['++'],
		_user$project$Main$intToPadStr(hours),
		A2(
			_elm_lang$core$Basics_ops['++'],
			' : ',
			A2(
				_elm_lang$core$Basics_ops['++'],
				_user$project$Main$intToPadStr(mins),
				A2(
					_elm_lang$core$Basics_ops['++'],
					' . ',
					_user$project$Main$intToPadStr(hundredthsOfMins)))));
	return _elm_lang$html$Html$text(timeText);
};
var _user$project$Main$Tick = function (a) {
	return {ctor: 'Tick', _0: a};
};
var _user$project$Main$subs = function (model) {
	return A2(_elm_lang$core$Time$every, _elm_lang$core$Time$minute / 500, _user$project$Main$Tick);
};
var _user$project$Main$main = _elm_lang$html$Html$program(
	{init: _user$project$Main$init, view: _user$project$Main$view, update: _user$project$Main$update, subscriptions: _user$project$Main$subs})();
